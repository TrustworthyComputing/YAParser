Options { path: "benchmarks/euclidean_distance_v8.zok", frontend: FrontendOptions { language: Auto, value_threshold: None }, circ: CircOpt { r1cs: R1csOpt { verified: false, profile: false, div_by_zero: Incomplete, lc_elim_thresh: 50 }, field: FieldOpt { builtin: Bls12381, custom_modulus: "" }, ir: IrOpt { field_to_bv: Wrap, frequent_gc: false }, ram: RamOpt { enabled: false, range: Sort, index: Uniqueness, permutation: Msh }, fmt: FmtOpt { use_default_field: true, hide_field: false }, zsharp: ZsharpOpt { isolate_asserts: false }, datalog: DatalogOpt { rec_limit: 5, lint_prim_rec: false }, c: COpt { sv_functions: false, assert_no_ub: false } }, parties: 2, backend: R1cs { prover_key: "P", verifier_key: "V", lc_elimination_thresh: 50, action: Count, proof_impl: Groth16 } }
Done with IR optimization
key: main
Converting to r1cs
(computation 
(metadata
  (parties  prover verifier)

  (inputs
    (return (bv 32))
  )
  (commitments
  )
)
(precompute (
)(
 (return (bv 32))
)

  (declare
 (
 )
 (let
  (
   ('0 ((bv2pf 52435875175126190479447740508185965837690552500527637822603658699938581184513) #b00000000000000000000000000000111))
   ('1 ((array (mod 52435875175126190479447740508185965837690552500527637822603658699938581184513) (bv 32)) #b00000000000000000000000000000011 #b00000000000000000000000000001010 #b00000000000000000000000000001011 #b00000000000000000000000000001011 #b00000000000000000000000000001100 #b00000000000000000000000000001100 #b00000000000000000000000000001010 #b00000000000000000000000000001010))
   ('2 ((array (mod 52435875175126190479447740508185965837690552500527637822603658699938581184513) (bv 32)) #b00000000000000000000000000001010 #b00000000000000000000000000001111 #b00000000000000000000000000000011 #b00000000000000000000000000001001 #b00000000000000000000000000001011 #b00000000000000000000000000001101 #b00000000000000000000000000001100 #b00000000000000000000000000001010))
   ('3 (bvsub (select '2 '0) (select '1 '0)))
   ('4 ((bv2pf 52435875175126190479447740508185965837690552500527637822603658699938581184513) #b00000000000000000000000000000110))
   ('5 (bvsub (select '2 '4) (select '1 '4)))
   ('6 ((bv2pf 52435875175126190479447740508185965837690552500527637822603658699938581184513) #b00000000000000000000000000000101))
   ('7 (bvsub (select '2 '6) (select '1 '6)))
   ('8 ((bv2pf 52435875175126190479447740508185965837690552500527637822603658699938581184513) #b00000000000000000000000000000100))
   ('9 (bvsub (select '2 '8) (select '1 '8)))
   ('10 ((bv2pf 52435875175126190479447740508185965837690552500527637822603658699938581184513) #b00000000000000000000000000000011))
   ('11 (bvsub (select '2 '10) (select '1 '10)))
   ('12 ((bv2pf 52435875175126190479447740508185965837690552500527637822603658699938581184513) #b00000000000000000000000000000010))
   ('13 (bvsub (select '2 '12) (select '1 '12)))
   ('14 ((bv2pf 52435875175126190479447740508185965837690552500527637822603658699938581184513) #b00000000000000000000000000000001))
   ('15 (bvsub (select '2 '14) (select '1 '14)))
   ('16 ((bv2pf 52435875175126190479447740508185965837690552500527637822603658699938581184513) #b00000000000000000000000000000000))
   ('17 (bvsub (select '2 '16) (select '1 '16)))
  )
  
(tuple (bvadd (bvadd (bvadd (bvadd (bvadd (bvadd (bvadd (bvadd #b00000000000000000000000000000000 (bvmul '17 '17)) (bvmul '15 '15)) (bvmul '13 '13)) (bvmul '11 '11)) (bvmul '9 '9)) (bvmul '7 '7)) (bvmul '5 '5)) (bvmul '3 '3))))
)


)


  (declare
 (
  (return (bv 32))
 )
(= #b00000000000000000000000010010100 return))


)

Pre-opt R1cs size: 1
Final R1cs size: 1
